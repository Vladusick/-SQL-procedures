USE [Miracle]
GO
/****** Object:  StoredProcedure [dbo].[KW_231_1_v1]    Script Date: 14.10.2022 15:18:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author: Самощенко Владислав
-- Create date: 18.10.2022
-- Description:	Получение состава программы маректинга Созвездие
-- Входные параметры: Идентификатор филиала и идентификатор маркетингового мероптиятия Созвездия
-- =============================================
ALTER PROCEDURE [dbo].[KW_231_1_v1] @json nvarchar(max)
AS
BEGIN

 SET NOCOUNT ON;
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

  declare 
  @curDate date = getdate(),
  @branchId int = json_value(@json, '$.branch_id'), -- Идентификатор филиала
  @actionType varchar(100) = json_value(@json, '$.marketing_type_action') -- Тип маркетингового мероприятия Созвездие

  -- создание таблицы остатков
  create table #tmpOst(regId int, uQntOst numeric(15,5))
  -- создание таблицы с основными данными
  create table #tmpActions(nomenclatureId int, productId int, nomenclatureName varchar(511), quantity int, cip int, regId int, actionId int, marketingActionName varchar(150), dateStart date, dateEnd date, uQntOst numeric(15,5), isAttached char(1))
  -- создание таблицы постовщиков
  create table #tmpSuppliers(actionId int, productId int, cnt int)

  -- я тут только первый левел пока закинул, потом закинть 2 и 3

  /*
  Описание полей для таблиц с иерархической структурой:
  nomenclature_id - Код Номенклатуры
  product_code - Код товара из Созвездия
  nomenclature_name - Название номенклатуры
  quantity - План упаковок
  cip - CIP-цена
  qnt_ost - Текущий остаток
  date_start - Дата начала
  date_end - Дата окончания
  action_id - Код акции
  marketing_action_name - Наименование акции
  cnt - Количество разрешенных поставщиков
  reg_id - Код товара из Фармнет
  is_attached - Признак привязанности товара Созвездия к справочнику ФармНет
  drug_id - Код лекарства из Фармнет (Используется в связи второго и третьего уровня вложенности)
  */

  -- создание таблиц для уровней иерархии
  create table #lvl1(nomenclature_id int, product_code int, nomenclature_name varchar(511), quantity int, cip int, qnt_ost numeric(15,5), date_start date, date_end date, action_id int, marketing_action_name varchar(150), cnt int, reg_id int, is_attached char(1))
  create table #lvl2(nomenclature_id int, product_code int, nomenclature_name varchar(511), qnt_ost numeric(15,5), action_id int, reg_id int, is_attached char(1), drug_id int)
  create table #lvl3(nomenclature_id int, product_code int, nomenclature_name varchar(511), action_id int, fabr varchar(511), qnt_ost numeric(15,5), reg_id int, is_order char(1), drug_id int)

 -- заполнение таблицы остатков
 insert into #tmpOst(regId, uQntOst)
 select nd.RegID,
 sum(nd.uQntOst) as ostatok
 from Miracle.dbo.NaklData nd with(nolock)
 where nd.branchId = @branchId and nd.[Disable] = '0' and nd.uQntOst > 0.0001
 group by nd.RegID
 option(optimize for unknown)

 -- заполнение основной таблицы
 insert into #tmpActions(nomenclatureId, productId, nomenclatureName, quantity, regId, 
 actionId, marketingActionName, dateStart, dateEnd, uQntOst, isAttached) 
 select 
   cn.nomenclature_id,
   cp.product_id,
   cn.nomenclature_name,
   cp.quantity,
   cn.map_nomenclature_code,    -- Это RegId, только в Созвездии
   cb.marketing_action_id,
   cma.marketing_action_name,
   cma.date_start,
   cma.date_end,
   t.uQntOst,
   case when cn.map_nomenclature_code = 0 then '0' else '1' end [isAttached]
 from Miracle.dbo.ConstellationBranch cb with(nolock)
 join Miracle.dbo.ConstellationMarketingAction cma with(nolock)
 on cma.marketing_action_id = cb.marketing_action_id 
   and cma.marketing_action_type = @actionType
   and cma.[Disable] = '0' and @curDate between cma.date_start and cma.date_end
 left join Miracle.dbo.ConstellationProducts cp with(nolock)
 on cp.marketing_action_id = cma.marketing_action_id
 left join Miracle.dbo.ConstellationNomenclature cn with(nolock, forceseek, index = Ind1 )
 on cn.product_id = cp.product_id
 left join #tmpOst as t with(nolock) on cn.map_nomenclature_code = t.regId
 where cb.map_pharmacy_id = @branchId and cb.[Disable] = '0'
 option(optimize for unknown)

 -- скрыть удаленные товары
 update a set
 a.regId = isnull(r.RegID,0)
 from #tmpActions a with(nolock)
 left join Megapress.dbo.vRegistry r with(nolock, noexpand) on r.REGID = a.regid and r.FLAG = 0

 -- заполнение таблицы поставщиков
 insert into #tmpSuppliers(actionId, productId, cnt)
 select a.actionId, a.productId, count(*) cnt 
 from #tmpActions a with(nolock)
 join Miracle.dbo.ConstellationSuppliersActionProduct csap with(nolock, forceseek, index = Ind1)
 on csap.actionId = a.actionId and csap.productId = a.productId and csap.[disable] = '0'
 group by a.actionId,a.productId

 -- заполнение таблицы первого уровня
 insert into #lvl1(nomenclature_id, product_code, nomenclature_name, quantity, cip, qnt_ost, date_start, date_end, action_id, marketing_action_name, reg_id, cnt, is_attached)
 select
 v.nomenclatureId,
 v.productId,
 v.nomenclatureName,
 v.quantity,
 ISNULL(v.cip, 0),
 ISNULL(v.uQntOst, 0),
 v.dateStart,
 v.dateEnd,
 v.actionId,
 v.marketingActionName,
 v.regId,
 ISNULL(v.cnt, 0),
 v.isAttached
   from (
   select
   a.nomenclatureId,
   a.productId,
   a.nomenclatureName,
   a.quantity,
   a.cip,
   max(a.uQntOst) [uQntOst],
   a.dateStart,
   a.dateEnd,
   a.actionId,
   a.marketingActionName,
   max(a.regId) [regId],
   max(s.cnt) [cnt],
   max(a.isAttached) [isAttached]
   from #tmpActions as a with(nolock)
   left join #tmpSuppliers s with(nolock) on s.actionId = a.actionId and s.productId = a.productId 
   group by
   a.nomenclatureId,
   a.productId,
   a.nomenclatureName,
   a.quantity,
   a.cip,
   a.dateStart,
   a.dateEnd,
   a.actionId,
   a.marketingActionName
   ) v

 -- заполнение таблицы второго уровня
 insert into #lvl2(nomenclature_id, product_code, action_id, nomenclature_name, reg_id, t.qnt_ost, is_attached, drug_id)
 select
 v.nomenclatureId,
 v.productId,
 v.actionId,
 v.nomenclatureName,
 v.regId,
 ISNULL(v.uQntOst, 0),
 v.isAttached,
 ISNULL(vr.DRUGID, 0)
 from (
	select
	a.nomenclatureId,
	a.productId,
	a.actionId,
	a.nomenclatureName,
	max(a.uQntOst) [uQntOst],
	max(a.regId) [regId],
	max(a.isAttached) [isAttached]
	from #tmpActions as a with(nolock)
	group by a.nomenclatureId, a.productId, a.actionId, a.nomenclatureName/*,a.uQntOst,  a.regId, a.isAttached */
 ) v
   left join Megapress.dbo.vRegistry as vr with(nolock) on vr.regId = v.regId
 
 -- заполнение таблицы третьего уровня
 insert into #lvl3(nomenclature_id, product_code, action_id, nomenclature_name, reg_id, fabr, qnt_ost, is_order, drug_id)
 select distinct
 a.nomenclatureId,
 a.productId,
 a.actionId,
 vr.tovname,
 a.regId,
 vr.fabr,
 ISNULL(a.uQntOst, 0),
 case when o.isOrder = '0' then '1' else '0' end [isOrder],
 ISNULL(vr.DRUGID, 0)
 from #tmpActions as a with(nolock)
 left join Megapress.dbo.vRegistry as vr with(nolock, noexpand) on vr.REGID = a.regId
 left join Miracle.dbo.ConstellationOrderRegIdInBranch o with(nolock)
 on o.nomenclatureId = a.nomenclatureId and o.productId = a.productId and o.actionId = a.actionId and o.regId = a.regId
 where a.regId > 0

 -- финальная выборка с иерархической структурой
 select
  lvl1.nomenclature_id,
  lvl1.product_code,
  lvl1.nomenclature_name,
  lvl1.quantity,
  lvl1.qnt_ost,
  lvl1.date_start,
  lvl1.date_end,
  lvl1.action_id,
  lvl1.marketing_action_name,
  lvl1.cnt,
  lvl1.is_attached,
  lvl1.cip,
  (select
  lvl2.nomenclature_id,
    lvl2.product_code,
    lvl2.nomenclature_name,
    lvl2.qnt_ost,
	lvl2.action_id,
	lvl2.is_attached,
    (select
	lvl3.nomenclature_id,
	lvl3.product_code,
	lvl3.action_id,
	lvl3.nomenclature_name,
	lvl3.reg_id,
	lvl3.fabr,
	lvl3.qnt_ost,
	lvl3.is_order
    from #lvl3 lvl3 with(nolock)
	-- условие связи второго и третьего уровня. 
	-- Если добавить lvl2.drug_id = lvl3.drug_id, то в таблице перестанут появляться "Товары не в тему"
	where lvl2.product_code = lvl3.product_code and lvl2.action_id = lvl3.action_id and lvl2.nomenclature_id = lvl3.nomenclature_id
    for json auto ) as data
    from #lvl2 lvl2 with(nolock)
	-- условие связи первого и второго уровня
    where lvl2.product_code = lvl1.product_code and lvl2.action_id = lvl1.action_id and lvl2.nomenclature_id = lvl1.nomenclature_id and lvl2.reg_id = lvl1.reg_id and lvl2.nomenclature_name = lvl1.nomenclature_name
    for json auto) as data
 from #lvl1 lvl1 with(nolock)
 for json auto
 
 drop table #tmpActions
 drop table #tmpSuppliers
 drop table #tmpOst
 drop table #lvl1
 drop table #lvl2
 drop table #lvl3
END

